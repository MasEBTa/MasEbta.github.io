[
  {
    "judul": "Pendahuluan",
    "subbab code": "JS101-P1",
    "materi": [
      {
        "code": "JP11",
        "header": "Prequisite",
        "body": "<p class='card-text' style='text-align: justify;'>Sebelum mempelajari JavaScript ada baiknya kita memahami atau paling tidak pernah menggunakan HTML dan juga Css. Jadi pastikan anda memahami penggunaan :<ul><li>Html</li><li>Css</li></ul></p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP12",
        "header": "Sebelum Ada Javascript",
        "body": "<p class='card-text' style='text-align: justify'>Pada awalnya sebuah website hanya dibangun menggunakan html karena pada dasarnya sebuah infomasi yang ingin ditukarkan pada awalnya hanya berbentuk teks dokumen. Namun, seiring berjalannya waktu kebutuhan dalam format dan design dalam sebuah dokumen website mulai berkembang. Yakni sejak munculnya Css (Cascading Style Sheet) yang cukup <em>powerfull</em> untuk mendesain sebuah halaman web. Semenjak itu kebutuhan akan desain web mulai krusial dan terciptalah JavaScript yang dapat mendukung kebutuhan tersebut. JavaScript datang sebagai pelengkap yang bertindak mengatur interaktifitas di dalam sebuah dokumen.</p><p class='card-text' style='text-align: justify'>Anda dapat melihat contoh perkembangan website Yahoo dari tahun ketahun di sini : <a href='https://www.webdesignmuseum.org/gallery/yahoo-1994'>https://www.webdesignmuseum.org/gallery/yahoo-1994</a></p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP13",
        "header": "HTML, Css, Js",
        "body": "<p class='card-text' style='text-align: justify'>Html, Css, dan JavaScript merupakan suatu kesatuan yang tidak dapat dipisahkan dalam pembuatan website terutama untuk bagian front-end. Html pada sebuah web digunakan sebagai markup sebuah dokumen yang bekerja layaknya kerangka. css digunakan untuk menghias tampilan dari dokumen tersebut. Sedangkan, JavaScript digunakan untuk mengatur gerakan-gerakan yang ada di halamannya.</p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP14",
        "header": "Apa itu Javascript",
        "body": "<p class='card-text' style='text-align: justify'>Javascript atau sering disingkat JS, Pertama dibuat tahun 1995 oleh programmer di Netscape Bernama <strong>Brandan Eich</strong>. JavaScript adalah bahasa pemrograman tingkat tinggi yang pada awalnya dikembangkan untuk membuat website menjadi lebih “hidup”. Bersama dengan HTML dan CSS, JavaScript menjadi bahasa pemrograman paling populer untuk mengembangkan aplikasi berbasis web.</p><p class='card-text' style='text-align: justify'> JavaScript termasuk dalam kategori <strong><em>scripting language</em></strong >, yang mana salah satu ciri utama <em>scripting language</em> yakni kode-nya tidak perlu di kompilasi untuk bisa dijalankan.</p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP15",
        "header": "Sejarah Javascript",
        "body": "<p class='card-text' style='text-align: justify'>Seperti yang telah dikatakan sebelumnya bahwa JavaScript dibuat pada tahun 1995 oleh <strong>Brendan Eich</strong>, yang perupakan salah seorang programmer dari <strong>Netscape</strong>. Bahasa ini awalnya dinamai “<strong>Mocha</strong>” kemudian berubah menjadi “<strong>LiveScript</strong>”. Pada saat itu bahasa Java merupakan bahasa pemrograman yang paling populer. Untuk <strong>memanfaatkan kepopulerannya</strong>, nama <u>LiveScript pun diubah menjadi “JavaScript”</u>.</p><p class='card-text' style='text-align: justify'> Seiring berjalannya waktu JavaScript mulai banyak diadopsi di luar Netscape dan mulai massive digunakan. Netscape-pun mengambil langkah untuk standarisasi JavaScript. Pada <strong>November 1996</strong>, Netscape mengumumkan pertemuannya dengan organisasi standarsisasi yakni <strong>ECMA Internasional</strong> untuk memajukan standarisasi JavaScript. Pada bulan <strong>Juni 1997</strong>, Edisi pertama <strong>ECMA-262</strong> diadopsi oleh Majelis Umum European Computer Manufacturers Association (ECMA) sebagai standarisasi pertama JavaScript oleh Ecma. Sejak saat itu JavaScript juga dikenal dengan <strong>ECMAScript</strong>. Meskipun begitu, masih banyak yang menyebutnya dengan JavaScript hingga saat ini.</p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP16",
        "header": "ECMA Script",
        "body": "<h6 class='card-title'>Edisi Paling Popular</h6><p class='card-text' style='text-align: justify'>Terdapat beberapa versi ECMA-262 yang merupakan standarisasi JavaScript oleh ECMA sejak standarisasi pertamanya pada 1997. <strong>ECMAScript edisi 3 (1999)</strong> merupakan versi yang banyak digunakan ketika JavaScript sedang mendominasi.</p><h6 class='card-title'>Edisi 4 yang dibatalkan</h6><p class='card-text' style='text-align: justify'>Selama waktu tersebut, <strong>ECMAScript edisi 4</strong> sedang dalam proses pengembangan dengan harapan akan memberikan improvisasi yang cukup signifikan. Namun, ambisi tersebut tidak berjalan mulus sehingga pada tahun 2008 pengembangan ECMAScript edisi 4 dihentikan. Pengembanganpun berganti menjadi ECMAScript edisi 5 yang pada akhirnya dirilis pada tahun 2009.</p><h6 class='card-title'>Edisi 6 yang Stabil</h6><p class='card-text' style='text-align: justify'>Lalu, pada <strong>tahun 2015</strong> ECMAScript 6 rilis dengan membawa perubahan yang cukup besar termasuk ide-ide yang sudah direncanakan untuk edisi ke 4 yang dibatalkan. Versi ECMAScript edisi 6 disebut juga <strong>ES6</strong> <small>(baca: E-S-six)</small> (versi rujukan mayor paling popular saat ini).</p><h6 class='card-title'>Edisi Saat Ini</h6><p class='card-text' style='text-align: justify'>Ketika materi ini ditulis 2023, versi ECMAScript atau ECMA-262 telah berada pada edisi ke 14 yang dirilis pada bulan <strong>juni 2023</strong>. Kita dapat melihat perkembangan dari ECMAScript pada laman resmi mereka mengenai ECMA-262 di <a href='https://www.ecma-international.org/publications-and-standards/standards/ecma-262/'>sini.</a ></p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP17",
        "header": "Scripting Engine (ECMAScript engine)",
        "body": "<h6 class='card-title'>Bahasa Scripting</h6><p class='card-text' style='text-align: justify'>Seperti yang kita ketehui bahwa JavaScript merupakan sebuah <em>Scripting Language</em> (bahasa scripting) yang mana kode-nya tidak perlu dikompilasi agar bisa dijalankan. Namun, ada sebuah syarat agar code JavaScript dapat dijalankan yakni haruslah berjalan di atas browser.</p><h6 class='card-title'>Scripting Engine</h6><p class='card-text' style='text-align: justify'>Kenapa kode JavaScript harus di jalankan di atas browser karena browser memiliki sebuah <em><strong>Scripting Engine</strong></em>. Scripting Engine yang dimiliki hampir semua browser yang ada di dunia termasuk kedalam ECMAScript engine, yang mana engine tersebut dapat mejalankan kode ECMAScript.</p><p></p><p class='card-text' style='text-align: justify'> Berikut adalah beberapa contoh dari scripting engine yang dimiliki browser :</p><div class='div-table mb-3' style='overflow-x: auto'><table style='border-collapse: collapse; width: 100%'><tr><th style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;' rowspan='2'>Scripting Engine</th><th style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;' rowspan='2'>Appication</th><th style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;' colspan='4'>Conformance</th></tr><tr ><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>ES5</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>ES6</td><td style='padding: 8px;text-align: left;border-bottom: 1px solid #ddd;'>ES7 (2016)</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>Newer (2017++)</td></tr><tr><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>SpiderMonkey</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>Firefox 94</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>98%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td></tr><tr><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>V8</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>Google Chrome 95, Microsoft Edge 95, Opera 80</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>98%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td></tr><tr><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>JavaScriptCore</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>Savari 15</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>99%</td><td style='padding: 8px; text-align: left; border-bottom: 1px solid #ddd;'>100%</td><td style='padding: 8px;text-align: left;border-bottom: 1px solid #ddd;'>90%</td></tr><caption>Sumber :<a href='https://en.wikipedia.org/wiki/ECMAScript'>https://en.wikipedia.org/wiki/ECMAScript</a></caption></table></div><p class='card-text' style='text-align: justify'> Anda dapat meilihat lebih banyak list dari ECMAScript Engin di halaman<em>Wikipedia</em> berikut : <a href='https://en.wikipedia.org/wiki/List_of_ECMAScript_engines'>List of ECMAScript engines</a></p><h6 class='card-title'>Awalnya Untuk Client Side</h6><p class='card-text' style='text-align: justify'>Karena JavaScript diharuskan untuk di jalankan diatas browser membuat popularitas JavaScript untuk pengembangan website menjadi sangat popular. Karena alasan itu juga JavaScript ini pada awalnya hanya bisa digunakan untuk sisi Client yakni hanya bisa digunakan untuk mendesain tampilan website (peran JavaScript dalam mendesain tampilan website yakni untuk interaktifitas dari website).</p>",
        "style": "/* The progress container (grey background) */.progress-container {width: 100%;height: 8px;background: #ccc;}/* The progress bar (scroll indicator) */.progress-bar {height: 8px;background: #7db1ec;width: 0%;}.fix-top {position: fixed;z-index: 10;top: 0;}.menu-fix {position: fixed;z-index: 11;top: 1rem;right: 1rem;}",
        "tipe": "teks"
      },
      {
        "code": "JP18",
        "header": "Javascript Untuk Server",
        "body": "<h6 class='card-title'>Awalnya Untuk Sisi CLient</h6><p class='card-text' style='text-align: justify'>Seperti yang kita ketehui bahwa JavaScript merupakan sebuah <em>Scripting Language</em> yang mana harus dijalankan diatas browser untuk mendapatkan hasilnya. Hal tersebut dikarenakan browser memiliki scripting engine.</p><h6 class='card-title'>Node Js</h6><p class='card-text' style='text-align: justify'>Namun, semenjak munculnya node js (2009) yang mana node js ini mengeluarkan V8 engine yang digunakan di Google Chrome keluar dari browser. Dengan begitu kode Javascript tidak lagi harus di jalankan diatas browser dan dapat di jalankan di luar browser dengan bantuan node js yang menggunakan V8 engine.</p><p class='card-text' style='text-align: justify'>Bahkan semenjak saat itu JavaScript mulai digunakan untuk membuat aplikasi berbasis server dengan bantuan node js. Sehingga kini JavaScript dapat disebut sebagai <em>fulstack language</em>.</p>",
        "style": ".card-text {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP19",
        "header": "Peralatan Development",
        "body": "<p style='text-align: justify' class='card-text'>Untuk mempelajari Javascript, kita membutuhkan beberapa peralatan yakni :</p><ol><li>Browser (untuk menjalankan kode)</li><p style='text-align: justify'>Seperti yang kita ketahui bahwa kode JavaScript harus di jalankan diatas scripting engine. Untuk itu kita akan menggunakan browser yang sudah dipastikan memiliki scripting engine. Ada banyak browser yang bisa kalian gunakan diantaranya.</p><ul><li><a href='https://www.google.com/chrome/'>Google Chrome</a></li><li><a href='https://www.mozila.org/firefox/'>Firefox</a></li><li><a href=': https://www.microsoft.com/edge'>Microsoft Edge</a></li><li><a href='https://www.apple.com/safari/'>Safari</a></li><li><a href='http://www.opera.com/'>Opera</a></li><li>dll</li></ul><li>Teks Editor atau Integerated Development Environtment</li><p style='text-align: justify'>Kita juga membutuhkan Text Editor yang akan digunakan membuat kode jadi JavaScript. Ada berbagai text editor atau IDE yang dapat anda gunakan, diantaranya :</p><ul><li><a href='https://notepad-plus-plus.org/'>Nodepad (bisa digunakan) / Nodepad++</a></li><li><a href='https://code.visualstudiocode.com/'>Vs Code</a></li><li><a href='https://subimetext.com/'>Sublime</a></li><li><a href='https://atom.io/'>Atom</a></li><li><a href='https://jetbrains.com/webstorm/'>WebStorm</a></li><li><a href='https://macromates.com/'>TextMate</a></li><li>dll</li></ul></ol>",
        "style": ".card-text, p {text-align: justify;}",
        "tipe": "teks"
      }
    ]
  },
  {
    "judul": "Program Pertama",
    "subbab code": "JS101-P2",
    "materi": [
      {
        "code": "JP21",
        "header": "Membuat Kode Javascript",
        "body": "<p style='text-align: justify;'>Kali ini kita akan mulai untuk mencoba menuliskan kode Javascript. Namun sebelumnya, kita sudah tau bahwa javascript ini merupakan <em>scripting language</em> sehingga kita perlu menjalankannya paling tidak di atas browser, karena browser memiliki <em>scripting engine</em>.</p><p>Lantas bagaimana cara kita menjalankan kode Javascript di browser?</p><p style='text-align: justify;'>Kalian pasti mengetahui bahwa HTML bisa berjalan diatas browser bukan? ketika sebuah file HTML dibuka di browser maka dia akan dibaca oleh browser dan ditampilkan. Nah, karena itu jika kita ingin membuat JavaScript di baca oleh browser kita akan memanfaatkan file HTML.</p><h6 class='card-title'>Memanfaatkan Html</h6><p style='text-align: justify;'>Yups, kita kan memanfaatkan file HTML untuk membuat kode JaVascript kita bisa di baca browser.</p>",
        "style": ".card-text, p {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP22",
        "header": "Cara Kerja",
        "body": "<h6 class='card-title'>Tag Script</h6><p style='text-align: justify' class='card-text'>Jadi bagaimana caranya kita menggunakan file HTML untuk membuat code javascript dibaca oleh browser? nah untuk itu HTML memiliki sebuah tag yakni tag : <code>&lt;script&gt;&lt;/script&gt;</code>. Jadi dengan memanfaatkan tag <code>&lt;script&gt;&lt;/script&gt;</code> kita akan membuat kode JavaScriptnya ada di dalam file HTML dan akhirnya bisa terbaca oleh browser.</p><p style='text-align: justify' class='card-text'>Misalkan kita punya file html seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;!DOCTYPE html&gt;<br />&lt;html lang='en'&gt;<br />&lt;head&gt;<br />&nbsp;&nbsp;&lt;meta charset='UTF-8' /&gt;<br />&nbsp;&nbsp;&lt;meta name='viewport' content='width=device-width,initial-scale=1.0' /&gt;<br />&nbsp;&nbsp;&lt;title&gt;Document Html&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp;&lt;h1&gt;Ini File Html&lt;/h1&gt;<br />&nbsp;&nbsp;&lt;p&gt;Ini dibuat langsung di dokumenhtml&lt;/p&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code></div></div><p style='text-align: justify' class='card-text'>Ketika kita menjalankan file tersebut di browser akan menampilkan hasil seperti ini :</p><div class='card mb-3'><div class='card-header'><sup><small>browser</small></sup><ul class='nav nav-tabs card-header-tabs'><li class='nav-item'><a class='nav-link active'>Document Html</a></li></ul></div><div class='card-body'><h6>Ini File Html</h6><p>Ini dibuat langsung di dokumen html</p></div></div><p style='text-align: justify' class='card-text'>Kita bisa membuat tag <code>script</code> di file nya untuk membuat code JavaScript-nya ada di dalam file HTML seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;!DOCTYPE html&gt;<br />&lt;html lang='en'&gt;<br />&lt;head&gt;<br />&nbsp;&nbsp;&lt;meta charset='UTF-8' /&gt;<br />&nbsp;&nbsp;&lt;meta name='viewport' content='width=device-width,initial-scale=1.0' /&gt;<br />&nbsp;&nbsp;&lt;title&gt;Document Html&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp;&lt;h1&gt;Ini File Html&lt;/h1&gt;<br />&nbsp;&nbsp;&lt;p&gt;Ini dibuat langsung di dokumenhtml&lt;/p&gt;<br />&nbsp;&nbsp;&lt;script&gt;&lt;/script&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code></div></div><h6 class='card-title'>Menuliskan Kode JavaScript</h6><p style='text-align: justify' class='card-text'>Di dalam tag <code>script</code>, kita bisa menuliskan kode-kode JavaScript-nya. Misal seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;!DOCTYPE html&gt;<br />&lt;html lang='en'&gt;<br />&lt;head&gt;<br />&nbsp;&nbsp;&lt;meta charset='UTF-8' /&gt;<br />&nbsp;&nbsp;&lt;meta name='viewport' content='width=device-width,initial-scale=1.0' /&gt;<br />&nbsp;&nbsp;&lt;title&gt;Document Html&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp;&lt;h1&gt;Ini File Html&lt;/h1&gt;<br />&nbsp;&nbsp;&lt;p&gt;Ini dibuat langsung di dokumenhtml&lt;/p&gt;<br />&nbsp;&nbsp;&lt;script&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;document.writeln('&lt;p&gt;Ini dibuat denganjavascript&lt;p&gt;')<br />&nbsp;&nbsp;&lt;/script&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code></div></div><p style='text-align: justify' class='card-text'>Jika kalian jalankan kode di atas di browser akan menghasilkan hasil seperti ini :</p><div class='card mb-3'><div class='card-header'><sup><small>browser</small></sup><ul class='nav nav-tabs card-header-tabs'><li class='nav-item'><a class='nav-link active'>Document Html</a></li></ul></div><div class='card-body'><h6>Ini File Html</h6><p>Ini dibuat langsung di dokumen html</p><p>Ini dibuat dengan javascript</p></div></div><div class='alert alert-info' role='alert'><strong>FYI :</strong> kode <code>document.writeln('&lt;p&gt;Ini dibuat dengan javascript&lt;p&gt;')</code> akan membuat apapun yang anda tuliskan di dalam tanda kurung <code>()</code> di tuliskan di dokumen HTML. oleh karena itu bentuk kodenya <code>document.writeln</code> atau bisa kita anggap bahwa kita sedang menyuruh browser untuk menuliskan <code>(writeln)</code> apa yang ada di dalam kurung ke dalam <code>document</code> html.</div><p style='text-align: justify' class='card-text'>Wow.. Keren bukan. Itu tadi salah satu cara kita untuk membuat browser membaca kode JavaScript. Yakni dengan menuliskan kodenya diantara tag <code>&lt;script&gt;&lt;/script&gt;</code> di dalam dokumen HTML.</p>",
        "style": ".card-text, p {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP23",
        "header": "File JS",
        "body": "<h6 class='card-title'>Membuat File JavaScript</h6><p style='text-align: justify' class='card-text'>Selain kita menuliskan kode JavaScript di dalam tag : <code>&lt;script&gt;&lt;/script&gt;</code>. kita juga bisa membuat sebuah file javascript secara terpisah. file javascript berakhiran <code>.js</code> sebagai format filenya. Jadi misalkan kita mempunyai sebuah file Html di dalam sebuah folder komputer kita :</p><div class='card mb-3'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'><p>|- file.html</p></div></div><p style='text-align: justify' class='card-text'>Anggap saja isi file.html nya seperti ini :</p><div class='card mb-3'><div class='card-header'>file.Html</div><div class='card-body'><code>&lt;!DOCTYPE html&gt;<br />&lt;html lang='en'&gt;<br />&lt;head&gt;<br />&nbsp;&nbsp;&lt;meta charset='UTF-8' /&gt;<br />&nbsp;&nbsp;&lt;meta name='viewport' content='width=device-width,initial-scale=1.0' /&gt;<br />&nbsp;&nbsp;&lt;title&gt;Document Html&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp;&lt;h1&gt;Ini File Html&lt;/h1&gt;<br />&nbsp;&nbsp;&lt;p&gt;Ini dibuat langsung di dokumenhtml&lt;/p&gt;<br />&nbsp;&nbsp;&lt;script&gt;&lt;/script&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code></div></div><p style='text-align: justify' class='card-text'>Lalu kita buat lagi file JavaScript dengan nama <code>script.js</code> yang kurang lebih isinya seperti ini :</p><div class='card mb-3'><div class='card-header'>script.js</div><div class='card-body'><code>document.writeln('&lt;p&gt;Ini dibuat denganjavascript&lt;p&gt;')</code></div></div><p style='text-align: justify' class='card-text'>Sehingga isi folder kita menjadi seperti ini :</p><div class='card mb-3'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'><p>|- file.html</p><p>|- script.js</p></div></div><p style='text-align:justify'>Kita bisa menghubungkan file <code>script.js</code> kita dengan file <code>file.html</code> dengan menggunakan tag <code>script</code>. Caranya yakni dengan menambahkan attribut <code>src</code> dengan value <code>alamat file script.js</code> ke dalam tag <code>script</code>-nya. Kurang lebih tag <code>script</code> kita akan menjadi seperti ini :</p><div class='card mb-3'><div class='card-body'><code>&lt;script src='script.js'&gt;&lt;/script&gt;</code></div></div><h6 class='card-title'>Hasil</h6><p style='text-align: justify' class='card-text'>Kurang lebih hasil code kita akan terlihat seperti ini :</p><!-- file --><div class='card mb-3'><div class='card-header'></div><div class='accordion accordion-flush' id='accordionFlushExample'><div class='accordion-item'><h2 class='accordion-header' id='flush-headingOne'><button class='accordion-button collapsed' type='button' data-bs-toggle='collapse' data-bs-target='#flush-collapseOne' aria-expanded='false' aria-controls='flush-collapseOne'>file.html</button></h2><div id='flush-collapseOne' class='accordion-collapse collapse' aria-labelledby='flush-headingOne' data-bs-parent='#accordionFlushExample'><div class='accordion-body'><div class='card-body'><code>&lt;!DOCTYPE html&gt;<br />&lt;html lang='en'&gt;<br />&lt;head&gt;<br />&nbsp;&nbsp;&lt;meta charset='UTF-8' /&gt;<br />&nbsp;&nbsp;&lt;meta name='viewport' content='width=device-width,initial-scale=1.0' /&gt;<br />&nbsp;&nbsp;&lt;title&gt;Document Html&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp;&lt;h1&gt;Ini File Html&lt;/h1&gt;<br />&nbsp;&nbsp;&lt;p&gt;Ini dibuat langsung di dokumenhtml&lt;/p&gt;<br />&nbsp;&nbsp;&lt;script src='script.js'&gt;&lt;/script&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code></div></div></div></div><div class='accordion-item'><h2 class='accordion-header' id='flush-headingTwo'><button class='accordion-button collapsed' type='button' data-bs-toggle='collapse' data-bs-target='#flush-collapseTwo' aria-expanded='false' aria-controls='flush-collapseTwo'>script.js</button></h2><div id='flush-collapseTwo' class='accordion-collapse collapse' aria-labelledby='flush-headingTwo' data-bs-parent='#accordionFlushExample'><div class='accordion-body'><div class='card-body'><code>document.writeln('&lt;p&gt;Ini dibuat dengan javascript&lt;p&gt;')</code></div></div></div></div><div class='accordion-item'><h2 class='accordion-header' id='flush-headingThree'><button class='accordion-button collapsed' type='button' data-bs-toggle='collapse' data-bs-target='#flush-collapseThree' aria-expanded='false' aria-controls='flush-collapseThree'>folder</button></h2><div id='flush-collapseThree' class='accordion-collapse collapse' aria-labelledby='flush-headingThree' data-bs-parent='#accordionFlushExample'><div class='accordion-body'><div class='card'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'><p>|- file.html</p><p>|- script.js</p></div></div></div></div></div></div><div class='card-footer'></div></div><p style='text-align: justify' class='card-text'>Jika kalian jalankan kode di atas di browser akan menghasilkan hasil seperti ini :</p><div class='card mb-3'><div class='card-header'><sup><small>browser</small></sup><ul class='nav nav-tabs card-header-tabs'><li class='nav-item'><a class='nav-link active'>Document Html</a></li></ul></div><div class='card-body'><h6>Ini File Html</h6><p>Ini dibuat langsung di dokumen html</p><p>Ini dibuat dengan javascript</p></div></div><p style='text-align: justify' class='card-text'>Wow.. Keren bukan. Itu tadi cara lain agar kita bisa membuat browser membaca sebuah file JavaScript, yang memiliki ekstensi <code>.js</code>. Yakni dengan memasukkannya ke dalam file HTML melalui tag <code>&lt;script&gt;&lt;/script&gt;</code> yang diberikan attribut <code>src</code> dengan sumber letak file javascript kita.</p>",
        "style": ".card-text, p {text-align: justify;}",
        "tipe": "teks"
      },
      {
        "code": "JP24",
        "header": "Folderisasi",
        "body": "<!-- folder yang sama --><h6 class='card-title'>File dalam foder yang sama</h6><div class='card mb-3'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'><p>|- file.html</p><p>|- script.js</p></div></div><p style='text-align: justify' class='card-text'>Pada halaman sebelumnya. Kode tag <code>script</code> kita tertulis seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;script src='script.js'&gt;&lt;/script&gt;</code></div></div><p style='text-align: justify' class='card-text'>Hal itu berarti kita mengarahkan pada file <code>script.js</code> yang ada di dalam folder yang sama dengan <code>file.html</code> kita. Namun kita menyarankannya menuliskannya seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;script src='./script.js'&gt;&lt;/script&gt;</code></div></div><p style='text-align: justify' class='card-text'>Kode <code>./</code> berarti kita ingin membuka folder saat ini atau folder tempat <code>file.html</code> berada. Setelah itu diikuti <code>script.js</code> hal itu berarti setelah kita membuka folder saat ini kita mengarahkan ke file <code>script.js</code> yang ada di dalamnya. Jadi dapat dikatakan <code>'./script.js'</code> sama seperti <code>'script.js'</code>.</p><!-- folder diatasnya --><h6 class='card-title'>File pada folder di atasnya</h6><div class='card mb-3'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'>|- file.html<br />|- source<br />&nbsp;&nbsp;&nbsp;&nbsp;|- script.js</div></div><p style='text-align: justify' class='card-text'>Apabila kita memiliki struktur foder seperti diatas, maka yang harus kita lakukan adalah :<ol><li>Membuka folder saai ini dengan dengan <code>'./'</code></li><li>Membuka folder <strong>source</strong> yang ada pada foder saat ini. Sehingga menjadi <code>'./source'</code></li><li>Mengarahkan pada file <code>script.js</code> setelah membuka folder source. Sehingga menjadi <code>'./souce/script.js'</code></li></ol></p><p>Hasilnya akan menjadi seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;script src='./source/script.js'&gt;&lt;/script&gt;</code></div></div><!-- folder dibawahnya --><h6 class='card-title'>File pada folder di bawahnya</h6><div class='card mb-3'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'>|- index<br />&nbsp;&nbsp;&nbsp;&nbsp;|- file.html<br />|- script.js</div></div><p style='text-align: justify' class='card-text'>Apabila kita memiliki struktur foder seperti diatas, maka yang harus kita lakukan adalah :<ol><li>Turun ke folder diatasnya atau ke folder sebelumnya dengn <code>'../'</code></li><li>Setelah kita keluar dari folder <code>index</code>, maka kita bisa langsung mengarahkan ke file <code>script.js</code> sehingga menjadi seperti ini <code>'../script.js'</code></li></ol></p><p>Hasilnya akan menjadi seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;script src='../script.js'&gt;&lt;/script&gt;</code></div></div><!-- folder lain --><h6 class='card-title'>File pada folder lain</h6><div class='card mb-3'><div class='card-header'>Local Disk (D:) > belajar-javascript ></div><div class='card-body'>|- index<br />&nbsp;&nbsp;&nbsp;&nbsp;|- file.html<br />|- source<br />&nbsp;&nbsp;&nbsp;&nbsp;|- script.js<br /></div></div><p style='text-align: justify' class='card-text'>Apabila kita memiliki struktur foder seperti diatas, maka yang harus kita lakukan adalah :<ol><li>Turun ke folder diatasnya atau ke folder sebelumnya dengn <code>'../'</code></li><li>Setelah kita keluar dari folder <code>index</code>, maka kita perlu masuk ke dalam folder source seperti ini <code>'../source'</code></li><li>Setelah kita folder source, kita hanya perlu mengarahkannya ke file <code>script.js</code>-nya</li></ol></p><p>Hasilnya akan menjadi seperti ini :</p><div class='card mb-3'><div class='card-header'>Html</div><div class='card-body'><code>&lt;script src='../source/script.js'&gt;&lt;/script&gt;</code></div></div><!-- kesimpulan --><h6 class='card-title'>Kesimpulan</h6><div class='card mb-3'><div class='card-header'>Folderisasi</div><div class='card-body'><ul style='text-align: justify;'><li>Gunakan <code>./</code> untuk membuka foder saat ini atau tempat file HTML berada.</li><li>Gunakan <code>../</code> untuk keluar dari folder saat ini.</li><li>Gunakan <code>/namaFolder</code> untuk membuka sebuah folder.</li><li>Gunakan <code>/namaFile.extention</code> untuk membuka atau memilih sebuah file.</li></ul></div></div>",
        "style": ".card-text, p {text-align: justify;}",
        "tipe": "teks"
      }
    ]
  }
]
